import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.StringTokenizer;

public class Connection extends Thread {
	Socket socket;

	public Connection(Socket socket) {
		this.socket = socket;
	}
	
	public void run() {
		try {
			BufferedReader netIn = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			PrintWriter netOut = new PrintWriter(socket.getOutputStream(), true);
			
			netOut.println("Welcome simple calcualtor assitance!!");
			
			String cmd;
			while((cmd = netIn.readLine()) != null) {
				cmd.trim();
				if(cmd.equalsIgnoreCase("EXIT")) {
					netOut.println("Connect closed.");
					break;
				}
				StringTokenizer stk = new StringTokenizer(cmd);
				int x, y;
				String operator;
				try	{
					x = Integer.parseInt(stk.nextToken()); 
					operator = stk.nextToken();
					y = Integer.parseInt(stk.nextToken());
					String result = getMath(x, y, operator);
					netOut.println(result);
				} catch(Exception e) {
					netOut.println("Incorrect math!");
				}
			}
			netIn.close();
			netOut.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	private String getMath(int x, int y, String operator) {
		String res = x +" "+ operator +" " + y + " = ";
		switch(operator) {
		case "+":
			return res += (x+y);
		case "-":
			return res += (x-y);
		case "*":
			return res += (x*y);
		case "/":
			if(y == 0) return "Error: not divide 0";
			double tmp = (double) x/y;
			return res += tmp;
		default:
			return "Operator not right";
		}
	}
}
